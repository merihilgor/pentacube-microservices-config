spring.sleuth.scheduled.enabled=false
spring.sleuth.async.enabled=false
spring.sleuth.annotation.enabled=false


# management endpoints
management.endpoints.web.expose=*


management.endpoint.refresh.enabled=true


### REACTIVE
endpoints.default.web.enabled=true


# disable JMX
endpoints.jmx.enabled=false
spring.jmx.enabled=false


debug=true
spring.sleuth.sampler.percentage=1.0

info.id=${spring.application.name}

#server.port=${PORT:0}

management.security.enabled=false

logging.level.org.springframework.security=DEBUG
#logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([trace=%X{X-Trace-Id:-},span=%X{X-Span-Id:-}]){yellow} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wex

spring.sleuth.log.json.enabled=true

#spring.zipkin.host=${DOCKER_IP}

#spring.cloud.consul.host=${DOCKER_IP}
#spring.cloud.consul.discovery.hostname=${DOCKER_HOST_IP:cna}

logging.level.com.netflix.eureka=OFF
logging.level.com.netflix.discovery=OFF


#spring.rabbitmq.host=${DOCKER_IP}
#spring.redis.host=${DOCKER_IP}

#spring.zipkin.base-url=http://${DOCKER_IP}:9411
#spring.zipkin.base-url=http://127.0.0.1:9411





endpoints.shutdown.enabled=true

spring.jpa.generate-ddl=true


endpoints.shutdown.enabled=true

spring.jpa.generate-ddl=true


## Rabbit specific binder bits
# spring.cloud.stream.binder.rabbit.default.default-delivery-mode=persistent
# spring.cloud.stream.binder.rabbit.default.acknowledge-mode=manual
# spring.cloud.stream.binder.rabbit.default.durable-subscription=true
# spring.cloud.stream.binder.rabbit.default.transacted=true
# spring.cloud.stream.binder.rabbit.default.default-requeue-rejected=true
# spring.cloud.stream.binder.rabbit.default.auto-bind-dlq=true
# spring.cloud.stream.binder.rabbit.default.republish-to-dlq=true


info.description=please update me

server.port=0

management.contextPath=/admin

endpoints.health.sensitive=false
endpoints.restart.enabled=true
endpoints.shutdown.enabled=true

spring.cloud.config.discovery.enabled=true

eureka.environment=DEV

eureka.server.registry-sync-retry-wait-ms=1000
eureka.server.a-sgcache-expiry-timeout-ms=20000
eureka.server.eviction-interval-timer-in-ms=10000
eureka.server.peer-eureka-nodes-update-interval-ms=3000
eureka.server.renewal-threshold-update-interval-ms=60000

eureka.refresh.interval: 1
eureka.appInfo.replace.interval: 1
eureka.appInfo.initial.replace.time: 2

eureka.client.healthcheck.enabled=true
# eureka.client.serviceUrl.defaultZone=${DISCOVERY_SERVICE_URL:http://${DISCOVERY_SERVICE_HOST:localhost}:${DISCOVERY_SERVICE_PORT:8761}/eureka/}
eureka.client.prefer-same-zone-eureka=true
# eureka.client.region=zone${ZONE:1}
eureka.client.availability-zones.zone1='peer1,peer2'
eureka.client.availability-zones.zone2='peer2,peer1'
eureka.client.serviceUrl.peer1=http://peer1:8761
eureka.client.serviceUrl.peer2=http://peer2:8762
# eureka.client.serviceUrl.defaultZone=${eureka.client.serviceUrl.peer${ZONE:1}},${eureka.client.serviceUrl.peer1},${eureka.client.serviceUrl.peer2}
# eureka.client.serviceUrl.defaultZone=${eureka.client.serviceUrl.peer${ZONE:1}}

eureka.instance.appname=${spring.application.name}
#eureka.instance.instanceId=${eureka.client.region}-${spring.application.name}-${INSTANCE_ID:${random.value}}
#eureka.instance.instanceId=${eureka.client.region}-${spring.application.name}-${spring.cloud.client.ipAddress}-${INSTANCE_ID:${random.value}}
eureka.instance.statusPageUrlPath=${management.contextPath}/info
eureka.instance.healthCheckUrlPath=${management.contextPath}/health
eureka.instance.preferIpAddress=true

ribbon.ServerListRefreshInterval=1000
ribbon.ConnectTimeout=3000
ribbon.ReadTimeout=60000

hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000

# logging.level.com.netflix.discovery=OFF